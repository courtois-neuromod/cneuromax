[tool.mypy]
strict = true
allow_redefinition = true
ignore_missing_imports = true

[tool.setuptools.packages.find]
include = ["cneuromax"]

[project]
name = "cneuromax"
requires-python = ">=3.10" # Did not test with lower versions
authors = [{ name = "The SIMEXP Laboratory", email = "simexp.lab@gmail.com" }]
description = "The Courtois Neuromod Project's centralized Machine Learning repository"
version = "0.0.1"
# The following assumes that we build on top of the NGC PyTorch Docker image.
dependencies = [
    # MANDATORY for cneuromax/
    "hydra-core==1.3.2", # Configuration management
    "hydra-zen==0.11.0", # Cleaner Hydra configs
    "beartype==0.16.4", # Dynamic type checking
    "wandb==0.16.0", # Logging
    # OPTIONAL for cneuromax/
    """
    hydra-submitit-launcher"
    @git+https://github.com/courtois-neuromod/hydra
    @f89f83fc4095b3fa4fefd858b5fef00a296c3aec
    #subdirectory=plugins/hydra_submitit_launcher/
    """, # SLURM job launcher
    "hydra-orion-sweeper==1.6.3", # Hyperparameter optimization
    "jaxtyping==0.2.24", # Torch tensor annotations
    "nptyping==2.5.0", # Numpy array annotations
    "einops==0.7.0", # Makes shape transformations more readable
    "jupyterlab==4.0.9", # Jupyter notebook
    "jupyterlab-code-formatter==2.2.1", # Jupyter code formatter
    "ipywidgets==8.1.1", # Jupyter widgets
    "wandb-osh==1.2.0", # W&B support for SLURM
    "h5py==3.10.0", # HDF5 file format load/save
    "opencv-python==4.8.0.74", # Image processing
    # MANDATORY for cneuromax/fitting/deeplearning/
    "lightning==2.1.2",
    # OPTIONAL for cneuromax/fitting/deeplearning/
    "torchrl==0.2.1", # For reinforcement/imitation Learning tasks
    "transformers==4.35.2", # HuggingFace models & utils
    "datasets==2.15.0", # HuggingFace datasets
    # MANDATORY for cneuromax/fitting/neuroevolution/
    "mpi4py==3.1.5", # Inter-process communication
    "gymnasium==0.29.1", # RL/IL environments
    # MANDATORY for docs/
    "sphinx==7.2.6", # Documentation generator
    "esbonio==0.16.3", # Language server to render sphinx
    "furo==2023.9.10", # Theme
    "sphinx-copybutton==0.5.2", # Copy button for code blocks
    "sphinx-paramlinks==0.6.0", # Links to parameters in other pages
    "sphinx_autodoc_typehints==1.25.2", # More type hint customization
    "myst-parser==2.0.0", # Embeds markdown in sphinx
    # DEVELOPMENT
    "black[jupyter]==23.11.0", # Python Formatter
    "ruff==0.1.6", # Python Linter
    "doc8==1.1.1", # Documentation linter
    "yamllint==1.33.0", # YAML linter
    "pre-commit==3.5.0", # Git commit hooks
    "mypy==1.7.1", # Static type checker
    "pytest==7.4.3", # Testing framework
    "pytest-cov==4.1.0", # Test coverage
]

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = ["ALL"]
ignore = [
    "D107", # `undocumented-public-init`
            # Missing docstring in public `__init__`
            # https://docs.astral.sh/ruff/rules/undocumented-public-init/
            # Disabled as we combine the docstring of the class and the
            # `__init__` method because 1) `__init__` docstrings are
            # often redundant and 2) Our auto-documentation tool
            # renders better when the full docstring is in the class.
    "F722", # `forward-annotation-syntax-error`
            # Syntax error in forward annotation: {body}.
            # https://docs.astral.sh/ruff/rules/forward-annotation-syntax-error/
            # Disabled to be able to utilize Jaxtyping, see:
            # https://docs.kidger.site/jaxtyping/faq/#flake8-or-ruff-are-throwing-an-error
    "G004", # `logging-f-string`
            # Logging statement uses f-string.
            # https://docs.astral.sh/ruff/rules/logging-f-string/
            # Disabled to make it less verbose to log since printing is
            # disabled, see: https://docs.astral.sh/ruff/rules/print/
    "NPY002", # `numpy-legacy-random`
              # Replace legacy np.random.{method_name} call with np.random.Generator
              # Disabled as we use `lightning.seed_everything` to set the randomness
              # which still uses the legacy seeding method.
    "S301", # `suspicious-pickle-usage`
            # `pickle` and modules that wrap it can be unsafe when used to
            # deserialize untrusted data, possible security issue
            # https://docs.astral.sh/ruff/rules/suspicious-pickle-usage/
            # Disabled due to current implementation of checkpointing
            # in `cneuromax.fitting.neuroevolution`.
    "TCH001", # `typing-only-first-party-import`
              # Move application import {} into a type-checking block
              # https://docs.astral.sh/ruff/rules/typing-only-first-party-import/
              # Disabled as we use Beartype for dynamic type checking.
    "TCH002", # `typing-only-third-party-import`
              # Move third-party import {} into a type-checking block
              # https://docs.astral.sh/ruff/rules/typing-only-third-party-import/
              # Disabled as we use Beartype for dynamic type checking.
]

[tool.ruff.pycodestyle]
max-doc-length = 72

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"*_test.py" = [
    "S101",  # `assert`
             # Use of assert detected.
             # https://docs.astral.sh/ruff/rules/assert/
             # Disabled to be able to use assertions in test files.
    "PLR2004", # `magic-value-comparison`
               # Magic value used in comparison, consider replacing {value}
               # with a constant variable.
               # https://docs.astral.sh/ruff/rules/magic-value-comparison/
               # Disabled to be able to use magic values in test files.
]

[tool.doc8]
max-line-length = 79
