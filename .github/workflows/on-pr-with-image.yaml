name: On pull request workflows requiring the CNeuroMax image

on:
  pull_request:
    branches: [main]

jobs:
  docker-build:
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Build the tentative CNeuroMax Docker image
        run: docker build -t cneuromod/cneuromax:test .
  sphinx-build:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Build the documentation with Sphinx
        run: >
          docker run --rm -v ${PWD}:${PWD} -w ${PWD} cneuromod/cneuromax:test
          sphinx-build -b html ./docs/ ./docs/build/
  mypy:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Static type checking with Mypy
        run: >
          docker run --rm -v ${PWD}:${PWD} -w ${PWD} cneuromod/cneuromax:test
          mypy --config-file=pyproject.toml cneuromax
  pytest:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Unit testing with pytest
        run: >
          docker run --rm -v ${PWD}:${PWD} -w ${PWD} cneuromod/cneuromax:test
          pytest --cov cneuromax
  classify_mnist-mlp_cpu:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Create WANDB_KEY.txt file
        run: echo ${{ secrets.WANDB_KEY_MLC }} > ${PWD}/WANDB_KEY.txt
      - name: Runs project=classify_mnist task=mlp_cpu
        run: >
          docker run --privileged --gpus all --rm -e CNEUROMAX_PATH=${PWD}
          -v ${PWD}:${PWD} -e PYTHONPATH=${PYTHONPATH}:${PWD}
          -v /dev/shm:/dev/shm -w ${PWD} cneuromod/cneuromax:test
          python3 -m cneuromax project=classify_mnist task=mlp_cpu
          logger.entity=maximilienlc
  classify_mnist-mlp:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Create WANDB_KEY.txt file
        run: echo ${{ secrets.WANDB_KEY_MLC }} > ${PWD}/WANDB_KEY.txt
      - name: Runs project=classify_mnist task=mlp
        run: >
          docker run --privileged --gpus all --rm -e CNEUROMAX_PATH=${PWD}
          -v ${PWD}:${PWD} -e PYTHONPATH=${PYTHONPATH}:${PWD}
          -v /dev/shm:/dev/shm -w ${PWD} cneuromod/cneuromax:test
          python3 -m cneuromax project=classify_mnist task=mlp
          logger.entity=maximilienlc litmodule.config.log_val_wandb=True
  neuroevorl_control-acrobot:
    needs: docker-build
    runs-on: self-hosted
    steps:
      - name: Checkout the GitHub repo
        uses: actions/checkout@v4
      - name: Create WANDB_KEY.txt file
        run: echo ${{ secrets.WANDB_KEY_MLC }} > ${PWD}/WANDB_KEY.txt
      - name: Runs project=neuroevorl_control task=acrobot
        run: >
          docker run --privileged --gpus all --rm -e CNEUROMAX_PATH=${PWD}
          -v ${PWD}:${PWD} -e PYTHONPATH=${PYTHONPATH}:${PWD}
          -v /dev/shm:/dev/shm -w ${PWD} cneuromod/cneuromax:test
          python3 -m cneuromax project=neuroevorl_control task=acrobot
          logger.entity=maximilienlc config.total_num_gens=10
